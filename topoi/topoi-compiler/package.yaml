name: topoi-compiler
version: 0.1.0.0
# synopsis
# description
maintainer: Zheng Yan PEH <zypeh.geek@gmail.com>
github: topoi-lang/topoi
category: Language
license-file: LICENSE

ghc-options:
  - -Wall
  - -Wcompat
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wredundant-constraints

# Thanks to Alexis's [guide](https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018)
default-extensions:
  - ApplicativeDo
  - BangPatterns
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies

  # Allows the definition of default method signatures in class definitions
  # So that defining instances of the class the default implementation is filled
  # in and type checked with the default definition.
  - DefaultSignatures

  # For pattern matching, act as a wildcard
  - EmptyCase

  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving

  # Let's write type signatures in the instance declatations!
  - InstanceSigs

  - KindSignatures

  # Lambda case let you craft a case lambda without creating a fresh, unique
  # variable name that will only be used once, which is sometimes hard to do and
  # leads to worse names overall.
  - LambdaCase

  - MultiParamTypeClasses

  # Use if like lisp's cond! That will saves you from case..of and long guards.
  - MultiWayIf

  # Just like ES6 javascript, construct a pattern that binds a variable with
  # the same name as a record field
  - NamedFieldPuns

  - OverloadedStrings

  - PatternSynonyms
  - RankNTypes
  - ScopedTypeVariables
  - StandaloneDeriving
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators

dependencies:
  - base
  - dependent-hashmap
  - dependent-sum
  - dependent-sum-template
  - rock
  - text-short
  - unordered-containers

library:
  source-dirs: src
  exposed-modules:
    - Topoi.Domain.Term
    - Topoi.EvalNbE
    - Topoi.TypeCheck
    - Topoi.Compiler
